"""V1_0

Revision ID: f7981800ac1e
Revises: 
Create Date: 2021-10-30 00:37:27.797639

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "f7981800ac1e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=False),
        sa.Column("password_hash", sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_username"), ["username"], unique=True)

    op.create_table(
        "image",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("image_name", sa.String(length=140), nullable=False),
        sa.Column("expert_id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=100), nullable=False),
        sa.Column("biopsy_id", sa.String(length=100), nullable=True),
        sa.Column("type_coloration", sa.String(length=140), nullable=True),
        sa.Column("age_at_biopsy", sa.Integer(), nullable=True),
        sa.Column("image_path", sa.String(length=4096), nullable=False),
        sa.Column("diagnostic", sa.String(length=140), nullable=True),
        sa.Column("seg_matrix_path", sa.String(length=4096), nullable=True),
        sa.Column("mask_image_path", sa.String(length=4096), nullable=True),
        sa.Column("bland_image_path", sa.String(length=4096), nullable=True),
        sa.Column("classifier_path", sa.String(length=4096), nullable=True),
        sa.Column("mask_annot_path", sa.String(length=4096), nullable=True),
        sa.ForeignKeyConstraint(
            ["expert_id"], ["user.id"], name=op.f("fk_image_expert_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_image")),
        sa.UniqueConstraint("bland_image_path", name=op.f("uq_image_bland_image_path")),
        sa.UniqueConstraint("classifier_path", name=op.f("uq_image_classifier_path")),
        sa.UniqueConstraint("image_path", name=op.f("uq_image_image_path")),
        sa.UniqueConstraint("mask_annot_path", name=op.f("uq_image_mask_annot_path")),
        sa.UniqueConstraint("mask_image_path", name=op.f("uq_image_mask_image_path")),
        sa.UniqueConstraint("seg_matrix_path", name=op.f("uq_image_seg_matrix_path")),
    )
    with op.batch_alter_table("image", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_image_biopsy_id"), ["biopsy_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_image_diagnostic"), ["diagnostic"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_image_patient_id"), ["patient_id"], unique=False
        )

    op.create_table(
        "report_histo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.String(length=100), nullable=True),
        sa.Column("expert_id", sa.Integer(), nullable=False),
        sa.Column("biopsie_id", sa.String(length=140), nullable=True),
        sa.Column("muscle_prelev", sa.String(length=140), nullable=True),
        sa.Column("age_biopsie", sa.Integer(), nullable=True),
        sa.Column("date_envoie", sa.String(length=10), nullable=True),
        sa.Column("gene_diag", sa.String(length=140), nullable=True),
        sa.Column("ontology_tree", sa.JSON(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("conclusion", sa.String(length=140), nullable=True),
        sa.Column("BOQA_prediction", sa.String(length=140), nullable=True),
        sa.Column("BOQA_prediction_score", sa.Float(), nullable=True),
        sa.Column("datetime", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["expert_id"], ["user.id"], name=op.f("fk_report_histo_expert_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_report_histo")),
    )
    with op.batch_alter_table("report_histo", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_report_histo_BOQA_prediction"),
            ["BOQA_prediction"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_report_histo_conclusion"), ["conclusion"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_report_histo_gene_diag"), ["gene_diag"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_report_histo_patient_id"), ["patient_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("report_histo", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_report_histo_patient_id"))
        batch_op.drop_index(batch_op.f("ix_report_histo_gene_diag"))
        batch_op.drop_index(batch_op.f("ix_report_histo_conclusion"))
        batch_op.drop_index(batch_op.f("ix_report_histo_BOQA_prediction"))

    op.drop_table("report_histo")
    with op.batch_alter_table("image", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_image_patient_id"))
        batch_op.drop_index(batch_op.f("ix_image_diagnostic"))
        batch_op.drop_index(batch_op.f("ix_image_biopsy_id"))

    op.drop_table("image")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_username"))
        batch_op.drop_index(batch_op.f("ix_user_email"))

    op.drop_table("user")
    # ### end Alembic commands ###
